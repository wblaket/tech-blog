{"ast":null,"code":"var _jsxFileName = \"/home/blake/Documents/react/tech-blog/tech-blog/src/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  articleName,\n  setArticleInfo\n}) => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({\n        username,\n        text: commentText\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUserName('');\n    setCommentText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-comment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Add a comment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUserName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        columns: \"50\",\n        value: commentText,\n        onChange: event => setCommentText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addComment(),\n      children: \"Add Comment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentForm, \"nK6Y7LQO6zYCE6+9kx458YhhMf4=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/blake/Documents/react/tech-blog/tech-blog/src/components/CommentForm.js"],"names":["React","useState","CommentForm","articleName","setArticleInfo","username","setUserName","commentText","setCommentText","addComment","result","fetch","method","body","JSON","stringify","text","headers","json","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAF,KAAoC;AAAA;;AAEtD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAGA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBR,WAAY,cAA9B,EAA6C;AACrES,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,QAAAA,QAAF;AAAYW,QAAAA,IAAI,EAAET;AAAlB,OAAf,CAF+D;AAGrEU,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH4D,KAA7C,CAA1B;AAOA,UAAMJ,IAAI,GAAG,MAAMH,MAAM,CAACQ,IAAP,EAAnB;AACAd,IAAAA,cAAc,CAACS,IAAD,CAAd;AACAP,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uCACO;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEH,QAA1B;AAAoC,QAAA,QAAQ,EAAGc,KAAD,IAAWb,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApE;AAAA;AAAA;AAAA;AAAA,cADP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,0CACU;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,OAAO,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAId,WAAzC;AAAsD,QAAA,QAAQ,EAAGY,KAAD,IAAWX,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAzF;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAQ,MAAA,OAAO,EAAE,MAAMZ,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCD;;GAAMP,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\n\nconst CommentForm = ( {articleName, setArticleInfo}) => {\n\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({ username, text: commentText}),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUserName('');\n    setCommentText('');\n  }\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3> Add a comment </h3>\n      <label>\n        Name:<input type=\"text\" value={username} onChange={(event) => setUserName(event.target.value)} />\n      </label>\n\n      <label>\n        Comment:<textarea rows=\"4\" columns=\"50\" value = {commentText} onChange={(event) => setCommentText(event.target.value)}/>\n      </label>\n\n      <button onClick={() => addComment()}>Add Comment </button>\n    </div>\n  );\n}\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}