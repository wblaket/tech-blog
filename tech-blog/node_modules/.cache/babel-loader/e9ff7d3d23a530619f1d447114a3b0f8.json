{"ast":null,"code":"var _jsxFileName = \"/home/blake/Documents/react/tech-blog/tech-blog/src/pages/ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport articleContent from '../components/article-data';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport UpVotes from '../components/UpVotes';\nimport Tags from '../components/Tags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlePage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", articleInfo.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", articleInfo.author, \" \", articleInfo.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpVotes, {\n      articleName: name,\n      upvotes: articleInfo.upvotes,\n      setArticleInfo: setArticleInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" This is the article body. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)), \";\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), articleInfo.tags.map((tag, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tag\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlePage, \"vBqw9UXGd+fo/cJfkW3Wn4SGnro=\");\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["/home/blake/Documents/react/tech-blog/tech-blog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","ArticlesList","NotFoundPage","UpVotes","Tags","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","console","log","title","author","date","content","map","paragraph","key","tags","tag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAAA;;AAEjC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGT,cAAc,CAACU,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC;AAAEe,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACR,UAAMgB,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBV,IAAK,EAAvB,CAA1B;AACA,YAAMW,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KALD;;AAMAH,IAAAA,SAAS;AAChB,GARQ,EAQN,CAACR,IAAD,CARM,CAAT;AAUA,MAAI,CAACE,OAAL,EAAc,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEd,sBACE;AAAA,4BACE;AAAA,sBAAME,WAAW,CAACW,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,sBAAMX,WAAW,CAACY,MAAlB,OAA2BZ,WAAW,CAACa,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEjB,IAAtB;AAA4B,MAAA,OAAO,EAAEI,WAAW,CAACE,OAAjD;AAA0D,MAAA,cAAc,EAAED;AAA1E;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGH,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAA,gBAAcD;AAAd,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADH,CALH,oBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGjB,WAAW,CAACkB,IAAZ,CAAiBH,GAAjB,CAAqB,CAACI,GAAD,EAAMF,GAAN,kBAClB;AAAA,gBAAcE;AAAd,OAAQF,GAAR;AAAA;AAAA;AAAA;AAAA,YADH,CATH,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAiBD,CArCD;;GAAMvB,W;;KAAAA,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport articleContent from '../components/article-data';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport UpVotes from '../components/UpVotes';\nimport Tags from '../components/Tags';\n\nconst ArticlePage = ( {match} ) => {\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n\n  useEffect(() => {\n          const fetchData = async () => {\n              const result = await fetch(`/api/articles/${name}`);\n              const body = await result.json();\n              console.log(body);\n              setArticleInfo(body);\n          }\n          fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage />\n\n  return (\n    <>\n      <h1> {articleInfo.title} </h1>\n      <h2> {articleInfo.author} {articleInfo.date}</h2>\n      <UpVotes articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n      <p> This is the article body. </p>\n      {article.content.map((paragraph, key) => (\n          <p key={key}>{paragraph}</p>\n      ))};\n      <h2>Tags</h2>\n      {articleInfo.tags.map((tag, key) => (\n          <p key={key}>{tag}</p>\n      ))}\n      <h3>Comments</h3>\n    </>\n\n  );\n}\n\nexport default ArticlePage;\n"]},"metadata":{},"sourceType":"module"}