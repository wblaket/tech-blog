{"ast":null,"code":"var _jsxFileName = \"/home/blake/Documents/react/tech-blog/tech-blog/src/pages/ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport articleContent from '../components/article-data';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport Comments from '../components/Comments';\nimport UpVotes from '../components/UpVotes';\nimport Tags from '../components/Tags';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlePage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 24\n  }, this);\n  const array = Object.values(articleInfo.tags);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", articleInfo.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", articleInfo.author, \" \", articleInfo.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", articleInfo.subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpVotes, {\n      articleName: name,\n      upvotes: articleInfo.upvotes,\n      setArticleInfo: setArticleInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" This is the article body. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: array.map((x, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [x, \" \"]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlePage, \"vBqw9UXGd+fo/cJfkW3Wn4SGnro=\");\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["/home/blake/Documents/react/tech-blog/tech-blog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","ArticlesList","NotFoundPage","Comments","UpVotes","Tags","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","console","log","array","Object","values","tags","title","author","date","subject","content","map","paragraph","key","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAAA;;AAEjC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGV,cAAc,CAACW,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAAEgB,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACR,UAAMiB,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBV,IAAK,EAAvB,CAA1B;AACA,YAAMW,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KALD;;AAMAH,IAAAA,SAAS;AAChB,GARQ,EAQN,CAACR,IAAD,CARM,CAAT;AAUA,MAAI,CAACE,OAAL,EAAc,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEd,QAAMa,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcb,WAAW,CAACc,IAA1B,CAAd;AAEA,sBACE;AAAA,4BACE;AAAA,sBAAMd,WAAW,CAACe,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,sBAAMf,WAAW,CAACgB,MAAlB,OAA2BhB,WAAW,CAACiB,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,sBAAMjB,WAAW,CAACkB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEtB,IAAtB;AAA4B,MAAA,OAAO,EAAEI,WAAW,CAACE,OAAjD;AAA0D,MAAA,cAAc,EAAED;AAA1E;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGH,OAAO,CAACqB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAA,gBAAcD;AAAd,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADH,CANH,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,gBAAIX,KAAK,CAACS,GAAN,CAAU,CAACG,CAAD,EAAID,GAAJ,kBACZ;AAAA,mBAAiBC,CAAjB;AAAA,SAAWD,GAAX;AAAA;AAAA;AAAA;AAAA,cADE;AAAJ;AAAA;AAAA;AAAA;AAAA,YAXF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAmBD,CAzCD;;GAAM5B,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport articleContent from '../components/article-data';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from './NotFoundPage';\nimport Comments from '../components/Comments';\nimport UpVotes from '../components/UpVotes';\nimport Tags from '../components/Tags';\n\nconst ArticlePage = ( {match} ) => {\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n\n  useEffect(() => {\n          const fetchData = async () => {\n              const result = await fetch(`/api/articles/${name}`);\n              const body = await result.json();\n              console.log(body);\n              setArticleInfo(body);\n          }\n          fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage />\n\n  const array = Object.values(articleInfo.tags);\n\n  return (\n    <>\n      <h1> {articleInfo.title} </h1>\n      <h2> {articleInfo.author} {articleInfo.date}</h2>\n      <h3> {articleInfo.subject}</h3>\n      <UpVotes articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n      <p> This is the article body. </p>\n      {article.content.map((paragraph, key) => (\n          <p key={key}>{paragraph}</p>\n      ))}\n\n      <h2>Tags</h2>\n      <p>{array.map((x, key) => (\n        <span key={key}>{x} </span>\n      ))}</p>\n      <h3>Comments</h3>\n    </>\n\n  );\n}\n\nexport default ArticlePage;\n"]},"metadata":{},"sourceType":"module"}