{"ast":null,"code":"var _jsxFileName = \"/home/blake/Documents/react/tech-blog/tech-blog/src/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  articleName,\n  setArticleInfo\n}) => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({\n        username,\n        text: commentText\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUserName('');\n    setCommentText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        class: \"text-centered\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: username,\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"textarea\",\n            rows: 5,\n            value: commentText,\n            onChange: event => setCommentText(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => addComment(),\n            children: \"Add Comment \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CommentForm, \"nK6Y7LQO6zYCE6+9kx458YhhMf4=\");\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/blake/Documents/react/tech-blog/tech-blog/src/components/CommentForm.js"],"names":["React","useState","Button","Form","Col","CommentForm","articleName","setArticleInfo","username","setUserName","commentText","setCommentText","addComment","result","fetch","method","body","JSON","stringify","text","headers","json","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,QAAgC,iBAAhC;;;;AACA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAF,KAAoC;AAAA;;AAEtD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAGA,QAAMW,UAAU,GAAG,YAAY;AAC7B,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBR,WAAY,cAA9B,EAA6C;AACrES,MAAAA,MAAM,EAAE,MAD6D;AAErEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,QAAAA,QAAF;AAAYW,QAAAA,IAAI,EAAET;AAAlB,OAAf,CAF+D;AAGrEU,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH4D,KAA7C,CAA1B;AAOA,UAAMJ,IAAI,GAAG,MAAMH,MAAM,CAACQ,IAAP,EAAnB;AACAd,IAAAA,cAAc,CAACS,IAAD,CAAd;AACAP,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAZD;;AAcA,sBACE;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,eAAZ;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,KAAK,EAAEH,QAAjC;AAA2C,YAAA,QAAQ,EAAGc,KAAD,IAAWb,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAE,CAApC;AAAuC,YAAA,KAAK,EAAEd,WAA9C;AAA2D,YAAA,QAAQ,EAAGY,KAAD,IAAWX,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA9F;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA,iCAA0B;AAAG,YAAA,OAAO,EAAE,MAAMZ,UAAU,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAmBD,CAvCD;;GAAMP,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport {Button, Form, Col} from 'react-bootstrap'\nconst CommentForm = ( {articleName, setArticleInfo}) => {\n\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({ username, text: commentText}),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUserName('');\n    setCommentText('');\n  }\n\n  return (\n    <>\n    <div class=\"centered\">\n      <Form class=\"text-centered\">\n        <Form.Group controlId=\"formName\">\n          <Form.Label>Name:</Form.Label>\n          <Form.Control type=\"text\" value={username} onChange={(event) => setUserName(event.target.value)} />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Comment:</Form.Label>\n          <Form.Control type=\"textarea\" rows={5} value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n        </Form.Group>\n\n        <Button variant=\"success\"><a onClick={() => addComment()}>Add Comment </a></Button>\n      </Form>\n    </div>\n    </>\n  );\n}\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}